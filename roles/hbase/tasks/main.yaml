- name: download HBase
  tags: packages
  get_url: url="http://apache-mirror.rbc.ru/pub/apache/hbase/{{ hbase_release }}/hbase-{{ hbase_version }}-bin.tar.gz" dest=/tmp/hbase-{{ hbase_version }}-bin.tar.gz
  ignore_errors: true
  register: hbase_download_result

- name: try to get hbase from archive site if original one returns 404
  tags: packages
  get_url: url="http://archive.apache.org/dist/hbase/{{ hbase_version }}/hbase-{{ hbase_version }}-bin.tar.gz" dest=/tmp/hbase-{{ hbase_version }}-bin.tar.gz
  when: hbase_download_result.failed and hbase_download_result.status_code is defined and hbase_download_result.status_code == 404

#- name: create staging directory
#  tags: packages
#  file: path=/opt/hbase-{{ hbase_version }} state=directory

- name: unpack HBase
  tags: packages
  unarchive:
    src: /tmp/hbase-{{ hbase_version }}-bin.tar.gz
    dest: /opt/
    creates: /opt/hbase-{{ hbase_version }}
    remote_src: True

- name: create symlink for hbase
  tags: packages
  file: 
     src: /opt/hbase-{{ hbase_version }}
     dest: /usr/lib/hbase
     state: link

- name: check hbase config directory
  tags: config
  stat: path=/usr/lib/hbase/conf
  register: hbase_config_dir

- name: remove the hbase config directory
  tags: config
  file: path=/usr/lib/hbase/conf state=absent
  when: hbase_config_dir.stat.isdir is defined and hbase_config_dir.stat.isdir

- name: add hbase user
  tags: packages
  user: name={{ hbase_user }} shell=/usr/sbin/nologin state=present

- name: adjust limits for hbase
  tags: config
  copy: src=hbase-limits.conf dest=/etc/security/limits.d/hbase.conf

- name: add hbase executable
  tags: config
  copy: src=hbase-bin.conf dest=/usr/bin/hbase mode=0755

- name: create additional hbase directories
  file: path={{ item }} state=directory owner={{ hbase_user }} group={{ hbase_user }}
  with_items:
    - /var/log/hbase
    - /var/run/hbase

- name: create configuration directory
  file: path=/etc/hbase/conf.{{ cluster_name }} state=directory recurse=yes

- name: setup alternatives link
  alternatives: name=hbase-conf link=/etc/hbase/conf path=/etc/hbase/conf.{{ cluster_name }}

- name: create symlink for hbase config directory
  tags: config
  file:
     src: /etc/alternatives/hbase-conf
     dest: /usr/lib/hbase/conf
     state: link

- name: install template configurations
  tags: config
  template: src={{ item }}.j2 dest=/etc/hbase/conf/{{ item }}
  with_items:
    - hbase-site.xml
    - regionservers

- name: install files configurations
  tags: config
  copy: src={{ item }} dest=/etc/hbase/conf/{{ item }}
  with_items:
    - hadoop-metrics2-hbase.properties
    - hbase-env.cmd
    - hbase-env.sh
    - hbase-policy.xml
    - log4j.properties

- name: install default configurations
  tags: config
  copy: src=default/{{ item }} dest=/etc/default/{{ item }}
  with_items:
    - hbase

- include: hbase-master.yaml
  when: deploy == "hbase-master"

- include: regionserver.yaml
  when: deploy == "regionserver" and groups['hbasemaster']|count == 1
