- name: Set Hadoop yarn-resourcemanager and mapreduce-historyserver version
  tags: package
  set_fact:
    yarn_resourcemanager_pkg: "{{ 'hadoop-yarn-resourcemanager-' + yarn_resourcemanager_version if yarn_resourcemanager_version else 'hadoop-yarn-resourcemanager' }}"
    mapreduce_historyserver_pkg: "{{ 'hadoop-mapreduce-historyserver-' + mapreduce_historyserver_version if mapreduce_historyserver_version else 'hadoop-mapreduce-historyserver' }}"

- name: install resource manager package
  tags: package
  yum:  name={{ yarn_resourcemanager_pkg }} state=present
  notify:
    - restart resourcemanager service

- name: install history server package
  tags: package
  yum:  name={{ mapreduce_historyserver_pkg }} state=present
  when: ansible_fqdn == groups['yarnresourcemanager'][0]
  notify:
    - restart historyserver service

- name: install default configurations
  tags: config
  copy: src=default/{{ item }} dest=/etc/default/{{ item }}
  with_items:
    - hadoop-yarn-resourcemanager
    - hadoop-mapreduce-historyserver
  notify:
    - restart resourcemanager service
    - restart historyserver service

# Need to add check if this was already done before
- name: configure hdfs directories
  tags: config
  command: hdfs dfs {{ item }}
  become: true
  become_user: hdfs
  with_items:
    - -mkdir -p /tmp
    - -chmod 1777 /tmp
    - -mkdir -p /user/history
    - -chmod 1777 /user/history
    - -chown mapred:hadoop /user/history
    - -mkdir -p /var/log/hadoop-yarn/apps
    - -chown yarn:mapred /var/log/hadoop-yarn
    - -chown yarn:hadoop /var/log/hadoop-yarn/apps
    - -chmod 1777 /var/log/hadoop-yarn/apps
  run_once: true
  notify:
    - restart resourcemanager service
    - restart historyserver service

- meta: flush_handlers

- name: start resourcemanager service
  tags: service
  service: name=hadoop-yarn-resourcemanager state=started enabled=yes
  notify:
    - yarn refresh nodes
